import { compile } from "@mdx-js/mdx";
import type { NextPage } from "next";
import Head from "next/head";

import { REHYPE_PLUGINS, REMARK_PLUGINS } from "md-plugins";

import { runSync } from "@mdx-js/mdx";
import * as runtime from "react/jsx-runtime";

import { css, tw } from "@twind/core";

export type MdViewProps = {
  compiledMarkdown: string;
  components: JSX.Element[];
};

function MdView({ compiledMarkdown, components }: MdViewProps) {
  const Content = runSync(compiledMarkdown, runtime).default;

  return <Content />;
}

const Home: NextPage<{ compiledMarkdown: string }> = ({ compiledMarkdown }) => {
  const style = css({
    label: "main",
    "h1,h2,h3,h4,h5,h6": { "@apply": "font-sans px-2" },
    h1: { "@apply": "font-black text-3xl" },
    h2: {
      "@apply": "font-black text-2xl border-b-1 border-gray-200 pb-1",
    },
    "& a.github-embed-title": {
      "@apply": "px-4 text-lg text-blue-500 w-full bg-slate-100 rounded-lg",
    },

    // prisma
    "code[class*=\"language-\"],pre[class*=\"language-\"]": {
      "@apply": "bg-slate-100 font-mono",
    },
    "token.namespace": { "@apply": "opacity-[.7]" },
    [
      `.token.string,
    .token.attr-value`
    ]: { "@apply": "text-[#e3116c]" },
    [
      `.token.comment,
      .token.prolog,
      .token.doctype,
      .token.cdata`
    ]: { "@apply": "text-[#999988] italic" },
    [
      `.token.entity,
      .token.url,
      .token.symbol,
      .token.number,
      .token.boolean,
      .token.variable,
      .token.constant,
      .token.property,
      .token.regex,
      .token.inserted`
    ]: { "@apply": "text-[#36acaa]" },
    [
      `.token.atrule,
      .token.keyword,
      .token.attr-name,
      .language-autohotkey .token.selector`
    ]: {
      "@apply": "text-[#00a4db]",
    },
    [
      `.token.function,
    .token.deleted,
    .language-autohotkey .token.tag`
    ]: { "@apply": "text-[#9a050f]" },
    [
      `.token.tag,
    .token.selector,
    .language-autohotkey .token.keyword`
    ]: { "@apply": "text-[#00009f]" },
    [
      `.token.important,
    .token.function,
    .token.bold`
    ]: { "@apply": "font-medium" },

    // github-embed
    "span.code-line": {
      "@apply": "px-10",
    },
    "span.line-number::before": {
      "@apply": "-ml-10 content-[attr(line)] mr-4 text-right text-slate-400",
    },
  });
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={style}>
        <h1>title</h1>
        <MdView compiledMarkdown={compiledMarkdown} components={[]} />
      </main>
    </>
  );
};

export async function getStaticProps() {
  const t = `# Refractor
## Import refractor and register lang

- a

- [x] b

|a|b|
|---|---|
|t|t|

We should import refractor and register langs as following:

::gh[https://github.com/illumination-k/blog-remark/blob/7855162f655858f2122911c66d6dd80ef327a055/src/highlighter.ts#L11-L15]
`;

  const compiledMarkdown = String(
    await compile(t, {
      outputFormat: "function-body",
      format: "mdx",
      development: false,
      remarkPlugins: REMARK_PLUGINS,
      rehypePlugins: REHYPE_PLUGINS,
    }),
  );
  return { props: { compiledMarkdown } };
}

export default Home;
